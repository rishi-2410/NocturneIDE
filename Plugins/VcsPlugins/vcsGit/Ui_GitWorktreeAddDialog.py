# Form implementation generated from reading ui file 'src/eric7/Plugins/VcsPlugins/vcsGit/GitWorktreeAddDialog.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_GitWorktreeAddDialog(object):
    def setupUi(self, GitWorktreeAddDialog):
        GitWorktreeAddDialog.setObjectName("GitWorktreeAddDialog")
        GitWorktreeAddDialog.resize(500, 395)
        GitWorktreeAddDialog.setSizeGripEnabled(True)
        self.verticalLayout = QtWidgets.QVBoxLayout(GitWorktreeAddDialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label = QtWidgets.QLabel(parent=GitWorktreeAddDialog)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 0, 0, 1, 1)
        self.worktreePathPicker = EricPathPicker(parent=GitWorktreeAddDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.worktreePathPicker.sizePolicy().hasHeightForWidth())
        self.worktreePathPicker.setSizePolicy(sizePolicy)
        self.worktreePathPicker.setFocusPolicy(QtCore.Qt.FocusPolicy.StrongFocus)
        self.worktreePathPicker.setObjectName("worktreePathPicker")
        self.gridLayout_2.addWidget(self.worktreePathPicker, 0, 1, 1, 1)
        self.label_2 = QtWidgets.QLabel(parent=GitWorktreeAddDialog)
        self.label_2.setObjectName("label_2")
        self.gridLayout_2.addWidget(self.label_2, 1, 0, 1, 1)
        self.branchNameEdit = QtWidgets.QLineEdit(parent=GitWorktreeAddDialog)
        self.branchNameEdit.setClearButtonEnabled(True)
        self.branchNameEdit.setObjectName("branchNameEdit")
        self.gridLayout_2.addWidget(self.branchNameEdit, 1, 1, 1, 1)
        self.forceBranchCheckBox = QtWidgets.QCheckBox(parent=GitWorktreeAddDialog)
        self.forceBranchCheckBox.setObjectName("forceBranchCheckBox")
        self.gridLayout_2.addWidget(self.forceBranchCheckBox, 2, 0, 1, 2)
        self.lockCheckBox = QtWidgets.QCheckBox(parent=GitWorktreeAddDialog)
        self.lockCheckBox.setObjectName("lockCheckBox")
        self.gridLayout_2.addWidget(self.lockCheckBox, 3, 0, 1, 1)
        self.lockReasonEdit = QtWidgets.QLineEdit(parent=GitWorktreeAddDialog)
        self.lockReasonEdit.setEnabled(False)
        self.lockReasonEdit.setClearButtonEnabled(True)
        self.lockReasonEdit.setObjectName("lockReasonEdit")
        self.gridLayout_2.addWidget(self.lockReasonEdit, 3, 1, 1, 1)
        self.detachCheckBox = QtWidgets.QCheckBox(parent=GitWorktreeAddDialog)
        self.detachCheckBox.setObjectName("detachCheckBox")
        self.gridLayout_2.addWidget(self.detachCheckBox, 4, 0, 1, 2)
        self.verticalLayout.addLayout(self.gridLayout_2)
        self.groupBox = QtWidgets.QGroupBox(parent=GitWorktreeAddDialog)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.revButton = QtWidgets.QRadioButton(parent=self.groupBox)
        self.revButton.setObjectName("revButton")
        self.gridLayout.addWidget(self.revButton, 0, 0, 1, 1)
        self.revEdit = QtWidgets.QLineEdit(parent=self.groupBox)
        self.revEdit.setEnabled(False)
        self.revEdit.setObjectName("revEdit")
        self.gridLayout.addWidget(self.revEdit, 0, 1, 1, 1)
        self.tagButton = QtWidgets.QRadioButton(parent=self.groupBox)
        self.tagButton.setObjectName("tagButton")
        self.gridLayout.addWidget(self.tagButton, 1, 0, 1, 1)
        self.tagCombo = QtWidgets.QComboBox(parent=self.groupBox)
        self.tagCombo.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tagCombo.sizePolicy().hasHeightForWidth())
        self.tagCombo.setSizePolicy(sizePolicy)
        self.tagCombo.setEditable(True)
        self.tagCombo.setObjectName("tagCombo")
        self.gridLayout.addWidget(self.tagCombo, 1, 1, 1, 1)
        self.branchButton = QtWidgets.QRadioButton(parent=self.groupBox)
        self.branchButton.setObjectName("branchButton")
        self.gridLayout.addWidget(self.branchButton, 2, 0, 1, 1)
        self.branchCombo = QtWidgets.QComboBox(parent=self.groupBox)
        self.branchCombo.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.branchCombo.sizePolicy().hasHeightForWidth())
        self.branchCombo.setSizePolicy(sizePolicy)
        self.branchCombo.setEditable(True)
        self.branchCombo.setObjectName("branchCombo")
        self.gridLayout.addWidget(self.branchCombo, 2, 1, 1, 1)
        self.tipButton = QtWidgets.QRadioButton(parent=self.groupBox)
        self.tipButton.setChecked(True)
        self.tipButton.setObjectName("tipButton")
        self.gridLayout.addWidget(self.tipButton, 3, 0, 1, 2)
        self.verticalLayout.addWidget(self.groupBox)
        self.forceCheckBox = QtWidgets.QCheckBox(parent=GitWorktreeAddDialog)
        self.forceCheckBox.setObjectName("forceCheckBox")
        self.verticalLayout.addWidget(self.forceCheckBox)
        self.buttonBox = QtWidgets.QDialogButtonBox(parent=GitWorktreeAddDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Cancel|QtWidgets.QDialogButtonBox.StandardButton.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(GitWorktreeAddDialog)
        self.buttonBox.accepted.connect(GitWorktreeAddDialog.accept) # type: ignore
        self.buttonBox.rejected.connect(GitWorktreeAddDialog.reject) # type: ignore
        self.lockCheckBox.toggled['bool'].connect(self.lockReasonEdit.setEnabled) # type: ignore
        self.branchButton.toggled['bool'].connect(self.branchCombo.setEnabled) # type: ignore
        self.tagButton.toggled['bool'].connect(self.tagCombo.setEnabled) # type: ignore
        self.revButton.toggled['bool'].connect(self.revEdit.setEnabled) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(GitWorktreeAddDialog)

    def retranslateUi(self, GitWorktreeAddDialog):
        _translate = QtCore.QCoreApplication.translate
        GitWorktreeAddDialog.setWindowTitle(_translate("GitWorktreeAddDialog", "Git Add Worktree"))
        self.label.setText(_translate("GitWorktreeAddDialog", "Worktree Path:"))
        self.worktreePathPicker.setToolTip(_translate("GitWorktreeAddDialog", "Enter the path name of the new worktree."))
        self.label_2.setText(_translate("GitWorktreeAddDialog", "Branchname:"))
        self.branchNameEdit.setToolTip(_translate("GitWorktreeAddDialog", "Enter the name of the worktree branch."))
        self.forceBranchCheckBox.setToolTip(_translate("GitWorktreeAddDialog", "Select to create the branch even if it exists already."))
        self.forceBranchCheckBox.setText(_translate("GitWorktreeAddDialog", "Enforce Branch"))
        self.lockCheckBox.setToolTip(_translate("GitWorktreeAddDialog", "Select to lock the new worktree."))
        self.lockCheckBox.setText(_translate("GitWorktreeAddDialog", "Lock Worktree"))
        self.lockReasonEdit.setToolTip(_translate("GitWorktreeAddDialog", "Enter a reason for the lock (optional)."))
        self.detachCheckBox.setToolTip(_translate("GitWorktreeAddDialog", "Select to detach \"HEAD\" in the new worktree."))
        self.detachCheckBox.setText(_translate("GitWorktreeAddDialog", "Detach HEAD"))
        self.groupBox.setTitle(_translate("GitWorktreeAddDialog", "Revision"))
        self.revButton.setToolTip(_translate("GitWorktreeAddDialog", "Select to specify a revision by a revision expression"))
        self.revButton.setText(_translate("GitWorktreeAddDialog", "Commit:"))
        self.revEdit.setToolTip(_translate("GitWorktreeAddDialog", "Enter a commit id"))
        self.tagButton.setToolTip(_translate("GitWorktreeAddDialog", "Select to specify a revision by a tag"))
        self.tagButton.setText(_translate("GitWorktreeAddDialog", "Tag:"))
        self.tagCombo.setToolTip(_translate("GitWorktreeAddDialog", "Enter a tag name"))
        self.branchButton.setToolTip(_translate("GitWorktreeAddDialog", "Select to specify a revision by a branch"))
        self.branchButton.setText(_translate("GitWorktreeAddDialog", "Branch:"))
        self.branchCombo.setToolTip(_translate("GitWorktreeAddDialog", "Enter a branch name"))
        self.tipButton.setToolTip(_translate("GitWorktreeAddDialog", "Select HEAD revision"))
        self.tipButton.setText(_translate("GitWorktreeAddDialog", "HEAD"))
        self.forceCheckBox.setText(_translate("GitWorktreeAddDialog", "Enforce Worktree Creation"))
from eric7.EricWidgets.EricPathPicker import EricPathPicker
