# Form implementation generated from reading ui file 'src/eric7/Plugins/VcsPlugins/vcsMercurial/HgNewProjectOptionsDialog.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_HgNewProjectOptionsDialog(object):
    def setupUi(self, HgNewProjectOptionsDialog):
        HgNewProjectOptionsDialog.setObjectName("HgNewProjectOptionsDialog")
        HgNewProjectOptionsDialog.resize(562, 187)
        HgNewProjectOptionsDialog.setSizeGripEnabled(True)
        self.gridLayout = QtWidgets.QGridLayout(HgNewProjectOptionsDialog)
        self.gridLayout.setObjectName("gridLayout")
        self.lfNoteLabel = QtWidgets.QLabel(parent=HgNewProjectOptionsDialog)
        self.lfNoteLabel.setWordWrap(True)
        self.lfNoteLabel.setObjectName("lfNoteLabel")
        self.gridLayout.addWidget(self.lfNoteLabel, 4, 0, 1, 3)
        self.vcsUrlPicker = EricComboPathPicker(parent=HgNewProjectOptionsDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vcsUrlPicker.sizePolicy().hasHeightForWidth())
        self.vcsUrlPicker.setSizePolicy(sizePolicy)
        self.vcsUrlPicker.setFocusPolicy(QtCore.Qt.FocusPolicy.StrongFocus)
        self.vcsUrlPicker.setObjectName("vcsUrlPicker")
        self.gridLayout.addWidget(self.vcsUrlPicker, 0, 1, 1, 1)
        self.vcsRevisionLabel = QtWidgets.QLabel(parent=HgNewProjectOptionsDialog)
        self.vcsRevisionLabel.setObjectName("vcsRevisionLabel")
        self.gridLayout.addWidget(self.vcsRevisionLabel, 1, 0, 1, 1)
        self.vcsRevisionEdit = QtWidgets.QLineEdit(parent=HgNewProjectOptionsDialog)
        self.vcsRevisionEdit.setWhatsThis("")
        self.vcsRevisionEdit.setObjectName("vcsRevisionEdit")
        self.gridLayout.addWidget(self.vcsRevisionEdit, 1, 1, 1, 2)
        self.vcsProjectDirPicker = EricPathPicker(parent=HgNewProjectOptionsDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.vcsProjectDirPicker.sizePolicy().hasHeightForWidth())
        self.vcsProjectDirPicker.setSizePolicy(sizePolicy)
        self.vcsProjectDirPicker.setFocusPolicy(QtCore.Qt.FocusPolicy.StrongFocus)
        self.vcsProjectDirPicker.setObjectName("vcsProjectDirPicker")
        self.gridLayout.addWidget(self.vcsProjectDirPicker, 2, 1, 1, 2)
        self.largeCheckBox = QtWidgets.QCheckBox(parent=HgNewProjectOptionsDialog)
        self.largeCheckBox.setObjectName("largeCheckBox")
        self.gridLayout.addWidget(self.largeCheckBox, 3, 0, 1, 3)
        self.TextLabel4 = QtWidgets.QLabel(parent=HgNewProjectOptionsDialog)
        self.TextLabel4.setObjectName("TextLabel4")
        self.gridLayout.addWidget(self.TextLabel4, 2, 0, 1, 1)
        self.buttonBox = QtWidgets.QDialogButtonBox(parent=HgNewProjectOptionsDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Cancel|QtWidgets.QDialogButtonBox.StandardButton.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.gridLayout.addWidget(self.buttonBox, 5, 0, 1, 3)
        self.TextLabel2 = QtWidgets.QLabel(parent=HgNewProjectOptionsDialog)
        self.TextLabel2.setObjectName("TextLabel2")
        self.gridLayout.addWidget(self.TextLabel2, 0, 0, 1, 1)
        self.vcsUrlClearHistoryButton = QtWidgets.QToolButton(parent=HgNewProjectOptionsDialog)
        self.vcsUrlClearHistoryButton.setObjectName("vcsUrlClearHistoryButton")
        self.gridLayout.addWidget(self.vcsUrlClearHistoryButton, 0, 2, 1, 1)
        self.vcsRevisionLabel.setBuddy(self.vcsRevisionEdit)
        self.TextLabel4.setBuddy(self.vcsProjectDirPicker)
        self.TextLabel2.setBuddy(self.vcsUrlPicker)

        self.retranslateUi(HgNewProjectOptionsDialog)
        self.buttonBox.accepted.connect(HgNewProjectOptionsDialog.accept) # type: ignore
        self.buttonBox.rejected.connect(HgNewProjectOptionsDialog.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(HgNewProjectOptionsDialog)
        HgNewProjectOptionsDialog.setTabOrder(self.vcsUrlPicker, self.vcsUrlClearHistoryButton)
        HgNewProjectOptionsDialog.setTabOrder(self.vcsUrlClearHistoryButton, self.vcsRevisionEdit)
        HgNewProjectOptionsDialog.setTabOrder(self.vcsRevisionEdit, self.vcsProjectDirPicker)
        HgNewProjectOptionsDialog.setTabOrder(self.vcsProjectDirPicker, self.largeCheckBox)

    def retranslateUi(self, HgNewProjectOptionsDialog):
        _translate = QtCore.QCoreApplication.translate
        HgNewProjectOptionsDialog.setWindowTitle(_translate("HgNewProjectOptionsDialog", "New Project from Repository"))
        HgNewProjectOptionsDialog.setWhatsThis(_translate("HgNewProjectOptionsDialog", "<b>New Project from Repository Dialog</b>\n"
"<p>Enter the various repository infos into the entry fields. These values are used, when the new project is retrieved from the repository. If the checkbox is selected, the URL must end in the project name. A repository layout with project/tags, project/branches and project/trunk will be assumed. In this case, you may enter a tag or branch, which must look like tags/tagname or branches/branchname. If the checkbox is not selected, the URL must contain the complete path in the repository.</p>\n"
"<p>For remote repositories the URL must contain the hostname.</p>"))
        self.lfNoteLabel.setText(_translate("HgNewProjectOptionsDialog", "<b>Note:</b> This option increases the download time and volume."))
        self.vcsUrlPicker.setToolTip(_translate("HgNewProjectOptionsDialog", "Enter the URL of the repository"))
        self.vcsRevisionLabel.setText(_translate("HgNewProjectOptionsDialog", "&Revision:"))
        self.vcsRevisionEdit.setToolTip(_translate("HgNewProjectOptionsDialog", "Enter the revision the new project should be generated from"))
        self.vcsProjectDirPicker.setToolTip(_translate("HgNewProjectOptionsDialog", "Enter the directory of the new project."))
        self.vcsProjectDirPicker.setWhatsThis(_translate("HgNewProjectOptionsDialog", "<b>Project Directory</b>\n"
"<p>Enter the directory of the new project. It will be retrieved from \n"
"the repository and be placed in this directory.</p>"))
        self.largeCheckBox.setText(_translate("HgNewProjectOptionsDialog", "Download all versions of all large files"))
        self.TextLabel4.setText(_translate("HgNewProjectOptionsDialog", "Project &Directory:"))
        self.TextLabel2.setText(_translate("HgNewProjectOptionsDialog", "&URL:"))
        self.vcsUrlClearHistoryButton.setToolTip(_translate("HgNewProjectOptionsDialog", "Press to clear the history of entered repository URLs"))
from eric7.EricWidgets.EricPathPicker import EricComboPathPicker, EricPathPicker
