# Form implementation generated from reading ui file 'src/eric7/MicroPython/BluetoothDialogs/BluetoothScanWindow.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_BluetoothScanWindow(object):
    def setupUi(self, BluetoothScanWindow):
        BluetoothScanWindow.setObjectName("BluetoothScanWindow")
        BluetoothScanWindow.resize(650, 600)
        self.verticalLayout = QtWidgets.QVBoxLayout(BluetoothScanWindow)
        self.verticalLayout.setObjectName("verticalLayout")
        self.devicesList = QtWidgets.QTreeWidget(parent=BluetoothScanWindow)
        self.devicesList.setAlternatingRowColors(True)
        self.devicesList.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.NoSelection)
        self.devicesList.setObjectName("devicesList")
        self.verticalLayout.addWidget(self.devicesList)
        self.statusLabel = QtWidgets.QLabel(parent=BluetoothScanWindow)
        self.statusLabel.setObjectName("statusLabel")
        self.verticalLayout.addWidget(self.statusLabel)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(parent=BluetoothScanWindow)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.durationSpinBox = QtWidgets.QSpinBox(parent=BluetoothScanWindow)
        self.durationSpinBox.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.durationSpinBox.setMinimum(1)
        self.durationSpinBox.setMaximum(60)
        self.durationSpinBox.setProperty("value", 10)
        self.durationSpinBox.setObjectName("durationSpinBox")
        self.horizontalLayout.addWidget(self.durationSpinBox)
        self.scanButton = QtWidgets.QPushButton(parent=BluetoothScanWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.scanButton.sizePolicy().hasHeightForWidth())
        self.scanButton.setSizePolicy(sizePolicy)
        self.scanButton.setObjectName("scanButton")
        self.horizontalLayout.addWidget(self.scanButton)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.buttonBox = QtWidgets.QDialogButtonBox(parent=BluetoothScanWindow)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Close)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(BluetoothScanWindow)
        self.buttonBox.rejected.connect(BluetoothScanWindow.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(BluetoothScanWindow)
        BluetoothScanWindow.setTabOrder(self.devicesList, self.durationSpinBox)
        BluetoothScanWindow.setTabOrder(self.durationSpinBox, self.scanButton)

    def retranslateUi(self, BluetoothScanWindow):
        _translate = QtCore.QCoreApplication.translate
        BluetoothScanWindow.setWindowTitle(_translate("BluetoothScanWindow", "Bluetooth Scan"))
        self.devicesList.setSortingEnabled(True)
        self.devicesList.headerItem().setText(0, _translate("BluetoothScanWindow", "Name"))
        self.devicesList.headerItem().setText(1, _translate("BluetoothScanWindow", "MAC-Address"))
        self.devicesList.headerItem().setText(2, _translate("BluetoothScanWindow", "RSSI [dBm]"))
        self.label.setText(_translate("BluetoothScanWindow", "Scan Duration:"))
        self.durationSpinBox.setToolTip(_translate("BluetoothScanWindow", "Enter the scan duration in seconds"))
        self.durationSpinBox.setSuffix(_translate("BluetoothScanWindow", " s"))
        self.scanButton.setToolTip(_translate("BluetoothScanWindow", "Press to scan for Bluetooth devices."))
        self.scanButton.setText(_translate("BluetoothScanWindow", "Scan"))
