# Form implementation generated from reading ui file 'src/eric7/WebBrowser/WebAuth/Fido2ManagementDialog.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_Fido2ManagementDialog(object):
    def setupUi(self, Fido2ManagementDialog):
        Fido2ManagementDialog.setObjectName("Fido2ManagementDialog")
        Fido2ManagementDialog.resize(800, 700)
        Fido2ManagementDialog.setSizeGripEnabled(True)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(Fido2ManagementDialog)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.reloadButton = QtWidgets.QToolButton(parent=Fido2ManagementDialog)
        self.reloadButton.setObjectName("reloadButton")
        self.horizontalLayout.addWidget(self.reloadButton)
        self.securityKeysComboBox = QtWidgets.QComboBox(parent=Fido2ManagementDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.securityKeysComboBox.sizePolicy().hasHeightForWidth())
        self.securityKeysComboBox.setSizePolicy(sizePolicy)
        self.securityKeysComboBox.setObjectName("securityKeysComboBox")
        self.horizontalLayout.addWidget(self.securityKeysComboBox)
        self.lockButton = QtWidgets.QToolButton(parent=Fido2ManagementDialog)
        self.lockButton.setCheckable(True)
        self.lockButton.setObjectName("lockButton")
        self.horizontalLayout.addWidget(self.lockButton)
        self.pinButton = QtWidgets.QPushButton(parent=Fido2ManagementDialog)
        self.pinButton.setObjectName("pinButton")
        self.horizontalLayout.addWidget(self.pinButton)
        self.menuButton = EricToolButton(parent=Fido2ManagementDialog)
        self.menuButton.setPopupMode(QtWidgets.QToolButton.ToolButtonPopupMode.InstantPopup)
        self.menuButton.setObjectName("menuButton")
        self.horizontalLayout.addWidget(self.menuButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.groupBox = QtWidgets.QGroupBox(parent=Fido2ManagementDialog)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.loadPasskeysButton = QtWidgets.QPushButton(parent=self.groupBox)
        self.loadPasskeysButton.setObjectName("loadPasskeysButton")
        self.horizontalLayout_3.addWidget(self.loadPasskeysButton)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)
        self.gridLayout.addLayout(self.horizontalLayout_3, 0, 0, 1, 1)
        self.passkeysList = QtWidgets.QTreeWidget(parent=self.groupBox)
        self.passkeysList.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)
        self.passkeysList.setAlternatingRowColors(True)
        self.passkeysList.setObjectName("passkeysList")
        self.passkeysList.header().setDefaultSectionSize(150)
        self.gridLayout.addWidget(self.passkeysList, 1, 0, 1, 1)
        self.line = QtWidgets.QFrame(parent=self.groupBox)
        self.line.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 1, 1, 2, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.editButton = QtWidgets.QPushButton(parent=self.groupBox)
        self.editButton.setObjectName("editButton")
        self.verticalLayout.addWidget(self.editButton)
        self.deleteButton = QtWidgets.QPushButton(parent=self.groupBox)
        self.deleteButton.setObjectName("deleteButton")
        self.verticalLayout.addWidget(self.deleteButton)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem2)
        self.gridLayout.addLayout(self.verticalLayout, 1, 2, 2, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem3)
        self.label = QtWidgets.QLabel(parent=self.groupBox)
        self.label.setObjectName("label")
        self.horizontalLayout_2.addWidget(self.label)
        self.existingCountLabel = QtWidgets.QLabel(parent=self.groupBox)
        self.existingCountLabel.setObjectName("existingCountLabel")
        self.horizontalLayout_2.addWidget(self.existingCountLabel)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem4)
        self.label_2 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.remainingCountLabel = QtWidgets.QLabel(parent=self.groupBox)
        self.remainingCountLabel.setObjectName("remainingCountLabel")
        self.horizontalLayout_2.addWidget(self.remainingCountLabel)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem5)
        self.gridLayout.addLayout(self.horizontalLayout_2, 2, 0, 1, 1)
        self.verticalLayout_2.addWidget(self.groupBox)
        self.buttonBox = QtWidgets.QDialogButtonBox(parent=Fido2ManagementDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Close)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout_2.addWidget(self.buttonBox)

        self.retranslateUi(Fido2ManagementDialog)
        self.buttonBox.accepted.connect(Fido2ManagementDialog.accept) # type: ignore
        self.buttonBox.rejected.connect(Fido2ManagementDialog.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Fido2ManagementDialog)
        Fido2ManagementDialog.setTabOrder(self.securityKeysComboBox, self.lockButton)
        Fido2ManagementDialog.setTabOrder(self.lockButton, self.pinButton)
        Fido2ManagementDialog.setTabOrder(self.pinButton, self.loadPasskeysButton)
        Fido2ManagementDialog.setTabOrder(self.loadPasskeysButton, self.passkeysList)
        Fido2ManagementDialog.setTabOrder(self.passkeysList, self.editButton)
        Fido2ManagementDialog.setTabOrder(self.editButton, self.deleteButton)
        Fido2ManagementDialog.setTabOrder(self.deleteButton, self.reloadButton)
        Fido2ManagementDialog.setTabOrder(self.reloadButton, self.menuButton)

    def retranslateUi(self, Fido2ManagementDialog):
        _translate = QtCore.QCoreApplication.translate
        Fido2ManagementDialog.setWindowTitle(_translate("Fido2ManagementDialog", "FIDO2 Security Key Management"))
        self.reloadButton.setToolTip(_translate("Fido2ManagementDialog", "Press to reload the list of detected security keys."))
        self.securityKeysComboBox.setToolTip(_translate("Fido2ManagementDialog", "Select the security keys to be managed."))
        self.lockButton.setToolTip(_translate("Fido2ManagementDialog", "Press to unlock the security key, release to lock it again."))
        self.pinButton.setToolTip(_translate("Fido2ManagementDialog", "Press to set or change the PIN of the selected security key."))
        self.pinButton.setText(_translate("Fido2ManagementDialog", "Set PIN"))
        self.groupBox.setTitle(_translate("Fido2ManagementDialog", "Passkeys"))
        self.loadPasskeysButton.setToolTip(_translate("Fido2ManagementDialog", "Press ro load the passkeys of the selected security key."))
        self.loadPasskeysButton.setText(_translate("Fido2ManagementDialog", "Load Passkeys"))
        self.passkeysList.setSortingEnabled(True)
        self.passkeysList.headerItem().setText(0, _translate("Fido2ManagementDialog", "Domain"))
        self.passkeysList.headerItem().setText(1, _translate("Fido2ManagementDialog", "Credential ID"))
        self.passkeysList.headerItem().setText(2, _translate("Fido2ManagementDialog", "Display Name"))
        self.passkeysList.headerItem().setText(3, _translate("Fido2ManagementDialog", "User Name"))
        self.editButton.setToolTip(_translate("Fido2ManagementDialog", "Press to change the user info of the selected passkey."))
        self.editButton.setText(_translate("Fido2ManagementDialog", "Edit..."))
        self.deleteButton.setToolTip(_translate("Fido2ManagementDialog", "Press to delete the selected passkey."))
        self.deleteButton.setText(_translate("Fido2ManagementDialog", "Delete"))
        self.label.setText(_translate("Fido2ManagementDialog", "Existing Passkeys:"))
        self.label_2.setText(_translate("Fido2ManagementDialog", "Max. Remaining Passkeys:"))
from eric7.EricWidgets.EricToolButton import EricToolButton
