# Form implementation generated from reading ui file 'src/eric7/Testing/TestingWidget.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_TestingWidget(object):
    def setupUi(self, TestingWidget):
        TestingWidget.setObjectName("TestingWidget")
        TestingWidget.resize(900, 800)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(TestingWidget)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.tabWidget = QtWidgets.QTabWidget(parent=TestingWidget)
        self.tabWidget.setObjectName("tabWidget")
        self.parametersTab = QtWidgets.QWidget()
        self.parametersTab.setObjectName("parametersTab")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.parametersTab)
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.venvLabel = QtWidgets.QLabel(parent=self.parametersTab)
        self.venvLabel.setObjectName("venvLabel")
        self.gridLayout_3.addWidget(self.venvLabel, 0, 0, 1, 1)
        self.venvComboBox = QtWidgets.QComboBox(parent=self.parametersTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.venvComboBox.sizePolicy().hasHeightForWidth())
        self.venvComboBox.setSizePolicy(sizePolicy)
        self.venvComboBox.setInsertPolicy(QtWidgets.QComboBox.InsertPolicy.NoInsert)
        self.venvComboBox.setObjectName("venvComboBox")
        self.gridLayout_3.addWidget(self.venvComboBox, 0, 1, 1, 2)
        self.label = QtWidgets.QLabel(parent=self.parametersTab)
        self.label.setObjectName("label")
        self.gridLayout_3.addWidget(self.label, 1, 0, 1, 1)
        self.frameworkComboBox = QtWidgets.QComboBox(parent=self.parametersTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frameworkComboBox.sizePolicy().hasHeightForWidth())
        self.frameworkComboBox.setSizePolicy(sizePolicy)
        self.frameworkComboBox.setInsertPolicy(QtWidgets.QComboBox.InsertPolicy.NoInsert)
        self.frameworkComboBox.setObjectName("frameworkComboBox")
        self.gridLayout_3.addWidget(self.frameworkComboBox, 1, 1, 1, 1)
        self.versionsButton = QtWidgets.QToolButton(parent=self.parametersTab)
        self.versionsButton.setObjectName("versionsButton")
        self.gridLayout_3.addWidget(self.versionsButton, 1, 2, 1, 1)
        self.verticalLayout.addLayout(self.gridLayout_3)
        self.groupBox = QtWidgets.QGroupBox(parent=self.parametersTab)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.discoverCheckBox = QtWidgets.QCheckBox(parent=self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.discoverCheckBox.sizePolicy().hasHeightForWidth())
        self.discoverCheckBox.setSizePolicy(sizePolicy)
        self.discoverCheckBox.setChecked(True)
        self.discoverCheckBox.setObjectName("discoverCheckBox")
        self.horizontalLayout_4.addWidget(self.discoverCheckBox)
        self.clearHistoriesButton = QtWidgets.QToolButton(parent=self.groupBox)
        self.clearHistoriesButton.setObjectName("clearHistoriesButton")
        self.horizontalLayout_4.addWidget(self.clearHistoriesButton)
        self.gridLayout.addLayout(self.horizontalLayout_4, 0, 0, 1, 3)
        self.label_3 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 1, 0, 1, 1)
        self.discoveryPicker = EricComboPathPicker(parent=self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.discoveryPicker.sizePolicy().hasHeightForWidth())
        self.discoveryPicker.setSizePolicy(sizePolicy)
        self.discoveryPicker.setFocusPolicy(QtCore.Qt.FocusPolicy.WheelFocus)
        self.discoveryPicker.setObjectName("discoveryPicker")
        self.gridLayout.addWidget(self.discoveryPicker, 1, 1, 1, 2)
        self.testsuiteLabel = QtWidgets.QLabel(parent=self.groupBox)
        self.testsuiteLabel.setObjectName("testsuiteLabel")
        self.gridLayout.addWidget(self.testsuiteLabel, 2, 0, 1, 1)
        self.testsuitePicker = EricComboPathPicker(parent=self.groupBox)
        self.testsuitePicker.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.testsuitePicker.sizePolicy().hasHeightForWidth())
        self.testsuitePicker.setSizePolicy(sizePolicy)
        self.testsuitePicker.setFocusPolicy(QtCore.Qt.FocusPolicy.WheelFocus)
        self.testsuitePicker.setObjectName("testsuitePicker")
        self.gridLayout.addWidget(self.testsuitePicker, 2, 1, 1, 2)
        self.label_2 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 3, 0, 1, 1)
        self.testComboBox = QtWidgets.QComboBox(parent=self.groupBox)
        self.testComboBox.setEnabled(False)
        self.testComboBox.setEditable(True)
        self.testComboBox.setObjectName("testComboBox")
        self.gridLayout.addWidget(self.testComboBox, 3, 1, 1, 2)
        self.label_5 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 4, 0, 1, 1)
        self.testNamePatternEdit = QtWidgets.QLineEdit(parent=self.groupBox)
        self.testNamePatternEdit.setObjectName("testNamePatternEdit")
        self.gridLayout.addWidget(self.testNamePatternEdit, 4, 1, 1, 2)
        self.label_4 = QtWidgets.QLabel(parent=self.groupBox)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 5, 0, 1, 1)
        self.markerExpressionEdit = QtWidgets.QLineEdit(parent=self.groupBox)
        self.markerExpressionEdit.setClearButtonEnabled(True)
        self.markerExpressionEdit.setObjectName("markerExpressionEdit")
        self.gridLayout.addWidget(self.markerExpressionEdit, 5, 1, 1, 1)
        self.showMarkersButton = QtWidgets.QToolButton(parent=self.groupBox)
        self.showMarkersButton.setObjectName("showMarkersButton")
        self.gridLayout.addWidget(self.showMarkersButton, 5, 2, 1, 1)
        self.verticalLayout.addWidget(self.groupBox)
        self.optionsGroup = QtWidgets.QGroupBox(parent=self.parametersTab)
        self.optionsGroup.setObjectName("optionsGroup")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.optionsGroup)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.coverageCheckBox = QtWidgets.QCheckBox(parent=self.optionsGroup)
        self.coverageCheckBox.setObjectName("coverageCheckBox")
        self.gridLayout_2.addWidget(self.coverageCheckBox, 0, 0, 1, 1)
        self.coverageEraseCheckBox = QtWidgets.QCheckBox(parent=self.optionsGroup)
        self.coverageEraseCheckBox.setEnabled(False)
        self.coverageEraseCheckBox.setObjectName("coverageEraseCheckBox")
        self.gridLayout_2.addWidget(self.coverageEraseCheckBox, 0, 1, 1, 1)
        self.failfastCheckBox = QtWidgets.QCheckBox(parent=self.optionsGroup)
        self.failfastCheckBox.setObjectName("failfastCheckBox")
        self.gridLayout_2.addWidget(self.failfastCheckBox, 1, 0, 1, 1)
        self.debuggerCheckBox = QtWidgets.QCheckBox(parent=self.optionsGroup)
        self.debuggerCheckBox.setObjectName("debuggerCheckBox")
        self.gridLayout_2.addWidget(self.debuggerCheckBox, 1, 1, 1, 1)
        self.verticalLayout_2.addLayout(self.gridLayout_2)
        self.verticalLayout.addWidget(self.optionsGroup)
        self.discoveryGroup = QtWidgets.QGroupBox(parent=self.parametersTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.discoveryGroup.sizePolicy().hasHeightForWidth())
        self.discoveryGroup.setSizePolicy(sizePolicy)
        self.discoveryGroup.setObjectName("discoveryGroup")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.discoveryGroup)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.discoveryList = QtWidgets.QTreeWidget(parent=self.discoveryGroup)
        self.discoveryList.setContextMenuPolicy(QtCore.Qt.ContextMenuPolicy.CustomContextMenu)
        self.discoveryList.setAlternatingRowColors(True)
        self.discoveryList.setHeaderHidden(True)
        self.discoveryList.setExpandsOnDoubleClick(False)
        self.discoveryList.setObjectName("discoveryList")
        self.discoveryList.headerItem().setText(0, "1")
        self.verticalLayout_7.addWidget(self.discoveryList)
        self.verticalLayout.addWidget(self.discoveryGroup)
        self.tabWidget.addTab(self.parametersTab, "")
        self.resultsTab = QtWidgets.QWidget()
        self.resultsTab.setObjectName("resultsTab")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.resultsTab)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.progressGroupBox = QtWidgets.QGroupBox(parent=self.resultsTab)
        self.progressGroupBox.setObjectName("progressGroupBox")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.progressGroupBox)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.progressProgressBar = QtWidgets.QProgressBar(parent=self.progressGroupBox)
        self.progressProgressBar.setProperty("value", 0)
        self.progressProgressBar.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.progressProgressBar.setObjectName("progressProgressBar")
        self.verticalLayout_4.addWidget(self.progressProgressBar)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.progressCounterRunLabel = QtWidgets.QLabel(parent=self.progressGroupBox)
        self.progressCounterRunLabel.setObjectName("progressCounterRunLabel")
        self.horizontalLayout_2.addWidget(self.progressCounterRunLabel)
        self.progressCounterRunCount = QtWidgets.QLabel(parent=self.progressGroupBox)
        self.progressCounterRunCount.setText("0")
        self.progressCounterRunCount.setObjectName("progressCounterRunCount")
        self.horizontalLayout_2.addWidget(self.progressCounterRunCount)
        self.progressCounterRemLabel = QtWidgets.QLabel(parent=self.progressGroupBox)
        self.progressCounterRemLabel.setObjectName("progressCounterRemLabel")
        self.horizontalLayout_2.addWidget(self.progressCounterRemLabel)
        self.progressCounterRemCount = QtWidgets.QLabel(parent=self.progressGroupBox)
        self.progressCounterRemCount.setText("0")
        self.progressCounterRemCount.setObjectName("progressCounterRemCount")
        self.horizontalLayout_2.addWidget(self.progressCounterRemCount)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.verticalLayout_4.addLayout(self.horizontalLayout_2)
        self.verticalLayout_6.addWidget(self.progressGroupBox)
        self.resultsGroupBox = QtWidgets.QGroupBox(parent=self.resultsTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.resultsGroupBox.sizePolicy().hasHeightForWidth())
        self.resultsGroupBox.setSizePolicy(sizePolicy)
        self.resultsGroupBox.setObjectName("resultsGroupBox")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.resultsGroupBox)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.label_6 = QtWidgets.QLabel(parent=self.resultsGroupBox)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout.addWidget(self.label_6)
        self.statusFilterComboBox = QtWidgets.QComboBox(parent=self.resultsGroupBox)
        self.statusFilterComboBox.setMinimumSize(QtCore.QSize(150, 0))
        self.statusFilterComboBox.setSizeAdjustPolicy(QtWidgets.QComboBox.SizeAdjustPolicy.AdjustToMinimumContentsLengthWithIcon)
        self.statusFilterComboBox.setObjectName("statusFilterComboBox")
        self.horizontalLayout.addWidget(self.statusFilterComboBox)
        self.verticalLayout_5.addLayout(self.horizontalLayout)
        self.statusLabel = QtWidgets.QLabel(parent=self.resultsGroupBox)
        self.statusLabel.setText("")
        self.statusLabel.setObjectName("statusLabel")
        self.verticalLayout_5.addWidget(self.statusLabel)
        self.verticalLayout_6.addWidget(self.resultsGroupBox)
        self.tabWidget.addTab(self.resultsTab, "")
        self.verticalLayout_3.addWidget(self.tabWidget)
        self._4 = QtWidgets.QHBoxLayout()
        self._4.setObjectName("_4")
        self.sbLabel = QtWidgets.QLabel(parent=TestingWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sbLabel.sizePolicy().hasHeightForWidth())
        self.sbLabel.setSizePolicy(sizePolicy)
        self.sbLabel.setObjectName("sbLabel")
        self._4.addWidget(self.sbLabel)
        spacerItem2 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self._4.addItem(spacerItem2)
        self.verticalLayout_3.addLayout(self._4)
        self.buttonBox = QtWidgets.QDialogButtonBox(parent=TestingWidget)
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Close)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout_3.addWidget(self.buttonBox)
        self.venvLabel.setBuddy(self.venvComboBox)
        self.label_3.setBuddy(self.discoveryPicker)
        self.testsuiteLabel.setBuddy(self.testsuitePicker)
        self.label_2.setBuddy(self.testComboBox)
        self.label_5.setBuddy(self.testComboBox)

        self.retranslateUi(TestingWidget)
        self.tabWidget.setCurrentIndex(0)
        self.buttonBox.accepted.connect(TestingWidget.close) # type: ignore
        self.buttonBox.rejected.connect(TestingWidget.close) # type: ignore
        self.discoverCheckBox.toggled['bool'].connect(self.discoveryPicker.setEnabled) # type: ignore
        self.discoverCheckBox.toggled['bool'].connect(self.testsuitePicker.setDisabled) # type: ignore
        self.discoverCheckBox.toggled['bool'].connect(self.testComboBox.setDisabled) # type: ignore
        self.coverageCheckBox.toggled['bool'].connect(self.coverageEraseCheckBox.setEnabled) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(TestingWidget)
        TestingWidget.setTabOrder(self.tabWidget, self.venvComboBox)
        TestingWidget.setTabOrder(self.venvComboBox, self.frameworkComboBox)
        TestingWidget.setTabOrder(self.frameworkComboBox, self.versionsButton)
        TestingWidget.setTabOrder(self.versionsButton, self.discoverCheckBox)
        TestingWidget.setTabOrder(self.discoverCheckBox, self.clearHistoriesButton)
        TestingWidget.setTabOrder(self.clearHistoriesButton, self.discoveryPicker)
        TestingWidget.setTabOrder(self.discoveryPicker, self.testsuitePicker)
        TestingWidget.setTabOrder(self.testsuitePicker, self.testComboBox)
        TestingWidget.setTabOrder(self.testComboBox, self.testNamePatternEdit)
        TestingWidget.setTabOrder(self.testNamePatternEdit, self.markerExpressionEdit)
        TestingWidget.setTabOrder(self.markerExpressionEdit, self.showMarkersButton)
        TestingWidget.setTabOrder(self.showMarkersButton, self.coverageCheckBox)
        TestingWidget.setTabOrder(self.coverageCheckBox, self.coverageEraseCheckBox)
        TestingWidget.setTabOrder(self.coverageEraseCheckBox, self.failfastCheckBox)
        TestingWidget.setTabOrder(self.failfastCheckBox, self.debuggerCheckBox)
        TestingWidget.setTabOrder(self.debuggerCheckBox, self.discoveryList)
        TestingWidget.setTabOrder(self.discoveryList, self.statusFilterComboBox)

    def retranslateUi(self, TestingWidget):
        _translate = QtCore.QCoreApplication.translate
        TestingWidget.setWindowTitle(_translate("TestingWidget", "Testing"))
        self.venvLabel.setText(_translate("TestingWidget", "Virtual Environment:"))
        self.venvComboBox.setToolTip(_translate("TestingWidget", "Select the virtual environment to be used"))
        self.venvComboBox.setWhatsThis(_translate("TestingWidget", "<b>Virtual Environment</b>\\n<p>Enter the virtual environment to be used. Leave it empty to use the default environment, i.e. the one configured globally or per project.</p>"))
        self.label.setText(_translate("TestingWidget", "Test Framework:"))
        self.frameworkComboBox.setToolTip(_translate("TestingWidget", "Select the test framwork to be used"))
        self.versionsButton.setToolTip(_translate("TestingWidget", "Press to show the test framework versions"))
        self.groupBox.setTitle(_translate("TestingWidget", "Test Parameters"))
        self.discoverCheckBox.setToolTip(_translate("TestingWidget", "Select to discover tests automatically"))
        self.discoverCheckBox.setText(_translate("TestingWidget", "Discover tests (test modules must be importable)"))
        self.clearHistoriesButton.setToolTip(_translate("TestingWidget", "Press to clear the various histories"))
        self.label_3.setText(_translate("TestingWidget", "Discovery Start:"))
        self.discoveryPicker.setToolTip(_translate("TestingWidget", "Enter name of the directory at which to start the test file discovery"))
        self.discoveryPicker.setWhatsThis(_translate("TestingWidget", "<b>Discovery Start</b>\n"
"<p>Enter name of the directory at which to start the test file discovery.\n"
"Note that all test modules must be importable from this directory.</p>"))
        self.testsuiteLabel.setText(_translate("TestingWidget", "Test Filename:"))
        self.testsuitePicker.setToolTip(_translate("TestingWidget", "Enter name of file defining the testsuite"))
        self.testsuitePicker.setWhatsThis(_translate("TestingWidget", "<b>Testsuite</b><p>Enter the name of the file defining the testsuite. It should contain a method with a name given below. If no name is given, the \'suite()\' method will be tried. If no such method can be found, the module will be inspected for proper test cases.</p>"))
        self.label_2.setText(_translate("TestingWidget", "Test Name:"))
        self.testComboBox.setToolTip(_translate("TestingWidget", "Enter the test name. Leave empty to use the default name \"suite\"."))
        self.testComboBox.setWhatsThis(_translate("TestingWidget", "<b>Testname</b><p>Enter the name of the test to be performed. This name must follow the rules given by selecte test framework. If this field is empty, the default name of \"suite\" will be used.</p>"))
        self.label_5.setText(_translate("TestingWidget", "Test Name Pattern:"))
        self.testNamePatternEdit.setToolTip(_translate("TestingWidget", "Enter test name patterns (separated by a blank) or a test name expression"))
        self.label_4.setText(_translate("TestingWidget", "Marker Expression:"))
        self.markerExpressionEdit.setToolTip(_translate("TestingWidget", "Enter a marker expression or name to filter tests"))
        self.showMarkersButton.setToolTip(_translate("TestingWidget", "Press to show a window with the list of defined markers"))
        self.optionsGroup.setTitle(_translate("TestingWidget", "Run Parameters"))
        self.coverageCheckBox.setToolTip(_translate("TestingWidget", "Select whether coverage data should be collected"))
        self.coverageCheckBox.setText(_translate("TestingWidget", "Collect coverage data"))
        self.coverageEraseCheckBox.setToolTip(_translate("TestingWidget", "Select whether old coverage data should be erased"))
        self.coverageEraseCheckBox.setText(_translate("TestingWidget", "Erase coverage data"))
        self.failfastCheckBox.setToolTip(_translate("TestingWidget", "Select to stop the test run on the first error or failure"))
        self.failfastCheckBox.setText(_translate("TestingWidget", "Stop on First Error or Failure"))
        self.debuggerCheckBox.setToolTip(_translate("TestingWidget", "Select to execute the tests with debugger support."))
        self.debuggerCheckBox.setText(_translate("TestingWidget", "Run with Debugger Support"))
        self.discoveryGroup.setTitle(_translate("TestingWidget", "Discovery Results"))
        self.discoveryList.setSortingEnabled(True)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.parametersTab), _translate("TestingWidget", "Parameters"))
        self.progressGroupBox.setTitle(_translate("TestingWidget", "Progress"))
        self.progressProgressBar.setFormat(_translate("TestingWidget", "%v/%m Tests"))
        self.progressCounterRunLabel.setText(_translate("TestingWidget", "Run:"))
        self.progressCounterRunCount.setToolTip(_translate("TestingWidget", "Number of tests run"))
        self.progressCounterRemLabel.setText(_translate("TestingWidget", "Remaining:"))
        self.progressCounterRemCount.setToolTip(_translate("TestingWidget", "Number of tests to be run"))
        self.resultsGroupBox.setTitle(_translate("TestingWidget", "Results"))
        self.label_6.setText(_translate("TestingWidget", "Status Filter:"))
        self.statusFilterComboBox.setToolTip(_translate("TestingWidget", "Select the status of items to be shown."))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.resultsTab), _translate("TestingWidget", "Results"))
        self.sbLabel.setText(_translate("TestingWidget", "Idle"))
from eric7.EricWidgets.EricPathPicker import EricComboPathPicker
