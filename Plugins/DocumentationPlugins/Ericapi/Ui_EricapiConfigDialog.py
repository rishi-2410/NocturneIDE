# Form implementation generated from reading ui file 'src/eric7/Plugins/DocumentationPlugins/Ericapi/EricapiConfigDialog.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_EricapiConfigDialog(object):
    def setupUi(self, EricapiConfigDialog):
        EricapiConfigDialog.setObjectName("EricapiConfigDialog")
        EricapiConfigDialog.resize(500, 600)
        EricapiConfigDialog.setSizeGripEnabled(True)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(EricapiConfigDialog)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_7 = QtWidgets.QLabel(parent=EricapiConfigDialog)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_2.addWidget(self.label_7)
        self.startDirPicker = EricPathPicker(parent=EricapiConfigDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.startDirPicker.sizePolicy().hasHeightForWidth())
        self.startDirPicker.setSizePolicy(sizePolicy)
        self.startDirPicker.setFocusPolicy(QtCore.Qt.FocusPolicy.StrongFocus)
        self.startDirPicker.setObjectName("startDirPicker")
        self.horizontalLayout_2.addWidget(self.startDirPicker)
        self.verticalLayout_2.addLayout(self.horizontalLayout_2)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.TextLabel6 = QtWidgets.QLabel(parent=EricapiConfigDialog)
        self.TextLabel6.setObjectName("TextLabel6")
        self.horizontalLayout.addWidget(self.TextLabel6)
        self.outputFilePicker = EricPathPicker(parent=EricapiConfigDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.outputFilePicker.sizePolicy().hasHeightForWidth())
        self.outputFilePicker.setSizePolicy(sizePolicy)
        self.outputFilePicker.setFocusPolicy(QtCore.Qt.FocusPolicy.StrongFocus)
        self.outputFilePicker.setObjectName("outputFilePicker")
        self.horizontalLayout.addWidget(self.outputFilePicker)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.groupBox_2 = QtWidgets.QGroupBox(parent=EricapiConfigDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.groupBox_2.sizePolicy().hasHeightForWidth())
        self.groupBox_2.setSizePolicy(sizePolicy)
        self.groupBox_2.setObjectName("groupBox_2")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox_2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.languagesList = QtWidgets.QListWidget(parent=self.groupBox_2)
        self.languagesList.setAlternatingRowColors(True)
        self.languagesList.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.ExtendedSelection)
        self.languagesList.setObjectName("languagesList")
        self.verticalLayout.addWidget(self.languagesList)
        self.verticalLayout_2.addWidget(self.groupBox_2)
        self.hboxlayout = QtWidgets.QHBoxLayout()
        self.hboxlayout.setObjectName("hboxlayout")
        self.textLabel1_3 = QtWidgets.QLabel(parent=EricapiConfigDialog)
        self.textLabel1_3.setObjectName("textLabel1_3")
        self.hboxlayout.addWidget(self.textLabel1_3)
        self.sourceExtEdit = QtWidgets.QLineEdit(parent=EricapiConfigDialog)
        self.sourceExtEdit.setObjectName("sourceExtEdit")
        self.hboxlayout.addWidget(self.sourceExtEdit)
        self.verticalLayout_2.addLayout(self.hboxlayout)
        self.gridlayout = QtWidgets.QGridLayout()
        self.gridlayout.setObjectName("gridlayout")
        spacerItem = QtWidgets.QSpacerItem(31, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridlayout.addItem(spacerItem, 0, 1, 1, 1)
        self.recursionCheckBox = QtWidgets.QCheckBox(parent=EricapiConfigDialog)
        self.recursionCheckBox.setObjectName("recursionCheckBox")
        self.gridlayout.addWidget(self.recursionCheckBox, 0, 0, 1, 1)
        self.includePrivateCheckBox = QtWidgets.QCheckBox(parent=EricapiConfigDialog)
        self.includePrivateCheckBox.setObjectName("includePrivateCheckBox")
        self.gridlayout.addWidget(self.includePrivateCheckBox, 1, 0, 1, 2)
        self.verticalLayout_2.addLayout(self.gridlayout)
        self.hboxlayout1 = QtWidgets.QHBoxLayout()
        self.hboxlayout1.setObjectName("hboxlayout1")
        self.label = QtWidgets.QLabel(parent=EricapiConfigDialog)
        self.label.setObjectName("label")
        self.hboxlayout1.addWidget(self.label)
        self.baseEdit = QtWidgets.QLineEdit(parent=EricapiConfigDialog)
        self.baseEdit.setObjectName("baseEdit")
        self.hboxlayout1.addWidget(self.baseEdit)
        self.verticalLayout_2.addLayout(self.hboxlayout1)
        self.hboxlayout2 = QtWidgets.QHBoxLayout()
        self.hboxlayout2.setObjectName("hboxlayout2")
        self.label_2 = QtWidgets.QLabel(parent=EricapiConfigDialog)
        self.label_2.setObjectName("label_2")
        self.hboxlayout2.addWidget(self.label_2)
        self.excludeFilesEdit = QtWidgets.QLineEdit(parent=EricapiConfigDialog)
        self.excludeFilesEdit.setObjectName("excludeFilesEdit")
        self.hboxlayout2.addWidget(self.excludeFilesEdit)
        self.verticalLayout_2.addLayout(self.hboxlayout2)
        self.groupBox = QtWidgets.QGroupBox(parent=EricapiConfigDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
        self.groupBox.setSizePolicy(sizePolicy)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.ignoreDirsList = QtWidgets.QListWidget(parent=self.groupBox)
        self.ignoreDirsList.setAlternatingRowColors(True)
        self.ignoreDirsList.setObjectName("ignoreDirsList")
        self.gridLayout.addWidget(self.ignoreDirsList, 0, 0, 1, 3)
        self.deleteButton = QtWidgets.QPushButton(parent=self.groupBox)
        self.deleteButton.setObjectName("deleteButton")
        self.gridLayout.addWidget(self.deleteButton, 1, 0, 1, 1)
        self.addButton = QtWidgets.QPushButton(parent=self.groupBox)
        self.addButton.setObjectName("addButton")
        self.gridLayout.addWidget(self.addButton, 1, 1, 1, 1)
        self.ignoreDirPicker = EricPathPicker(parent=self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ignoreDirPicker.sizePolicy().hasHeightForWidth())
        self.ignoreDirPicker.setSizePolicy(sizePolicy)
        self.ignoreDirPicker.setFocusPolicy(QtCore.Qt.FocusPolicy.StrongFocus)
        self.ignoreDirPicker.setObjectName("ignoreDirPicker")
        self.gridLayout.addWidget(self.ignoreDirPicker, 1, 2, 1, 1)
        self.verticalLayout_2.addWidget(self.groupBox)
        self.buttonBox = QtWidgets.QDialogButtonBox(parent=EricapiConfigDialog)
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Cancel|QtWidgets.QDialogButtonBox.StandardButton.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout_2.addWidget(self.buttonBox)

        self.retranslateUi(EricapiConfigDialog)
        self.buttonBox.accepted.connect(EricapiConfigDialog.accept) # type: ignore
        self.buttonBox.rejected.connect(EricapiConfigDialog.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(EricapiConfigDialog)
        EricapiConfigDialog.setTabOrder(self.startDirPicker, self.outputFilePicker)
        EricapiConfigDialog.setTabOrder(self.outputFilePicker, self.languagesList)
        EricapiConfigDialog.setTabOrder(self.languagesList, self.sourceExtEdit)
        EricapiConfigDialog.setTabOrder(self.sourceExtEdit, self.recursionCheckBox)
        EricapiConfigDialog.setTabOrder(self.recursionCheckBox, self.includePrivateCheckBox)
        EricapiConfigDialog.setTabOrder(self.includePrivateCheckBox, self.baseEdit)
        EricapiConfigDialog.setTabOrder(self.baseEdit, self.excludeFilesEdit)
        EricapiConfigDialog.setTabOrder(self.excludeFilesEdit, self.ignoreDirPicker)
        EricapiConfigDialog.setTabOrder(self.ignoreDirPicker, self.addButton)
        EricapiConfigDialog.setTabOrder(self.addButton, self.ignoreDirsList)
        EricapiConfigDialog.setTabOrder(self.ignoreDirsList, self.deleteButton)

    def retranslateUi(self, EricapiConfigDialog):
        _translate = QtCore.QCoreApplication.translate
        EricapiConfigDialog.setWindowTitle(_translate("EricapiConfigDialog", "Ericapi Configuration"))
        self.label_7.setText(_translate("EricapiConfigDialog", "Start Directory:"))
        self.startDirPicker.setToolTip(_translate("EricapiConfigDialog", "Enter the start directory for the API generator"))
        self.TextLabel6.setText(_translate("EricapiConfigDialog", "Output File:"))
        self.outputFilePicker.setToolTip(_translate("EricapiConfigDialog", "Enter an output filename"))
        self.outputFilePicker.setWhatsThis(_translate("EricapiConfigDialog", "<b>Output Filename</b><p>Enter the filename of the output file. A \'%L\' placeholder is replaced by the language of the API file.</p>"))
        self.groupBox_2.setTitle(_translate("EricapiConfigDialog", "Languages"))
        self.languagesList.setToolTip(_translate("EricapiConfigDialog", "Select the languages of the  APIs to generate"))
        self.textLabel1_3.setText(_translate("EricapiConfigDialog", "Additional source extensions:"))
        self.sourceExtEdit.setToolTip(_translate("EricapiConfigDialog", "Enter additional source extensions separated by a comma"))
        self.recursionCheckBox.setToolTip(_translate("EricapiConfigDialog", "Select to recurse into subdirectories"))
        self.recursionCheckBox.setText(_translate("EricapiConfigDialog", "Recurse into subdirectories"))
        self.includePrivateCheckBox.setToolTip(_translate("EricapiConfigDialog", "Select to include private classes, methods and functions in the API file"))
        self.includePrivateCheckBox.setText(_translate("EricapiConfigDialog", "Include private classes, methods and functions"))
        self.label.setText(_translate("EricapiConfigDialog", "Base package name:"))
        self.baseEdit.setToolTip(_translate("EricapiConfigDialog", "Enter the name of the base package"))
        self.label_2.setText(_translate("EricapiConfigDialog", "Exclude Files:"))
        self.excludeFilesEdit.setToolTip(_translate("EricapiConfigDialog", "Enter filename patterns of files to be excluded separated by a comma"))
        self.groupBox.setTitle(_translate("EricapiConfigDialog", "Exclude Directories"))
        self.ignoreDirsList.setToolTip(_translate("EricapiConfigDialog", "List of directory basenames to be ignored"))
        self.deleteButton.setToolTip(_translate("EricapiConfigDialog", "Press to delete the selected directory from the list"))
        self.deleteButton.setText(_translate("EricapiConfigDialog", "Delete"))
        self.addButton.setToolTip(_translate("EricapiConfigDialog", "Press to add the entered directory to the list"))
        self.addButton.setText(_translate("EricapiConfigDialog", "Add"))
        self.ignoreDirPicker.setToolTip(_translate("EricapiConfigDialog", "Enter a directory basename to be ignored"))
from eric7.EricWidgets.EricPathPicker import EricPathPicker
