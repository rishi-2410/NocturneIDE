# Form implementation generated from reading ui file 'src/eric7/PipInterface/PipPackagesWidget.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_PipPackagesWidget(object):
    def setupUi(self, PipPackagesWidget):
        PipPackagesWidget.setObjectName("PipPackagesWidget")
        PipPackagesWidget.resize(500, 999)
        self.verticalLayout = QtWidgets.QVBoxLayout(PipPackagesWidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.viewToggleButton = QtWidgets.QToolButton(parent=PipPackagesWidget)
        self.viewToggleButton.setCheckable(True)
        self.viewToggleButton.setObjectName("viewToggleButton")
        self.horizontalLayout.addWidget(self.viewToggleButton)
        self.environmentsComboBox = QtWidgets.QComboBox(parent=PipPackagesWidget)
        self.environmentsComboBox.setObjectName("environmentsComboBox")
        self.horizontalLayout.addWidget(self.environmentsComboBox)
        self.pipMenuButton = EricToolButton(parent=PipPackagesWidget)
        self.pipMenuButton.setPopupMode(QtWidgets.QToolButton.ToolButtonPopupMode.InstantPopup)
        self.pipMenuButton.setObjectName("pipMenuButton")
        self.horizontalLayout.addWidget(self.pipMenuButton)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.environmentPathLabel = EricSqueezeLabelPath(parent=PipPackagesWidget)
        self.environmentPathLabel.setText("")
        self.environmentPathLabel.setObjectName("environmentPathLabel")
        self.verticalLayout.addWidget(self.environmentPathLabel)
        self.line = QtWidgets.QFrame(parent=PipPackagesWidget)
        self.line.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout.addWidget(self.line)
        self.viewsStackWidget = QtWidgets.QStackedWidget(parent=PipPackagesWidget)
        self.viewsStackWidget.setObjectName("viewsStackWidget")
        self.packagesPage = QtWidgets.QWidget()
        self.packagesPage.setObjectName("packagesPage")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.packagesPage)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.baseWidget = QtWidgets.QWidget(parent=self.packagesPage)
        self.baseWidget.setObjectName("baseWidget")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.baseWidget)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.refreshButton = QtWidgets.QToolButton(parent=self.baseWidget)
        self.refreshButton.setObjectName("refreshButton")
        self.horizontalLayout_2.addWidget(self.refreshButton)
        self.installButton = QtWidgets.QToolButton(parent=self.baseWidget)
        self.installButton.setObjectName("installButton")
        self.horizontalLayout_2.addWidget(self.installButton)
        self.upgradeButton = QtWidgets.QToolButton(parent=self.baseWidget)
        self.upgradeButton.setObjectName("upgradeButton")
        self.horizontalLayout_2.addWidget(self.upgradeButton)
        self.upgradeAllButton = QtWidgets.QToolButton(parent=self.baseWidget)
        self.upgradeAllButton.setObjectName("upgradeAllButton")
        self.horizontalLayout_2.addWidget(self.upgradeAllButton)
        self.uninstallButton = QtWidgets.QToolButton(parent=self.baseWidget)
        self.uninstallButton.setObjectName("uninstallButton")
        self.horizontalLayout_2.addWidget(self.uninstallButton)
        self.showPackageDetailsButton = QtWidgets.QToolButton(parent=self.baseWidget)
        self.showPackageDetailsButton.setObjectName("showPackageDetailsButton")
        self.horizontalLayout_2.addWidget(self.showPackageDetailsButton)
        self.line_3 = QtWidgets.QFrame(parent=self.baseWidget)
        self.line_3.setFrameShape(QtWidgets.QFrame.Shape.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_3.setObjectName("line_3")
        self.horizontalLayout_2.addWidget(self.line_3)
        self.cleanupButton = QtWidgets.QToolButton(parent=self.baseWidget)
        self.cleanupButton.setObjectName("cleanupButton")
        self.horizontalLayout_2.addWidget(self.cleanupButton)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.verticalLayout_6.addLayout(self.horizontalLayout_2)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.localCheckBox = QtWidgets.QCheckBox(parent=self.baseWidget)
        self.localCheckBox.setChecked(True)
        self.localCheckBox.setObjectName("localCheckBox")
        self.gridLayout_2.addWidget(self.localCheckBox, 0, 0, 1, 1)
        self.notRequiredCheckBox = QtWidgets.QCheckBox(parent=self.baseWidget)
        self.notRequiredCheckBox.setObjectName("notRequiredCheckBox")
        self.gridLayout_2.addWidget(self.notRequiredCheckBox, 0, 1, 1, 1)
        self.userCheckBox = QtWidgets.QCheckBox(parent=self.baseWidget)
        self.userCheckBox.setObjectName("userCheckBox")
        self.gridLayout_2.addWidget(self.userCheckBox, 1, 0, 1, 1)
        self.vulnerabilityCheckBox = QtWidgets.QCheckBox(parent=self.baseWidget)
        self.vulnerabilityCheckBox.setChecked(True)
        self.vulnerabilityCheckBox.setObjectName("vulnerabilityCheckBox")
        self.gridLayout_2.addWidget(self.vulnerabilityCheckBox, 1, 1, 1, 1)
        self.verticalLayout_6.addLayout(self.gridLayout_2)
        self.statusLabel = QtWidgets.QLabel(parent=self.baseWidget)
        self.statusLabel.setObjectName("statusLabel")
        self.verticalLayout_6.addWidget(self.statusLabel)
        self.splitter = QtWidgets.QSplitter(parent=self.baseWidget)
        self.splitter.setOrientation(QtCore.Qt.Orientation.Vertical)
        self.splitter.setChildrenCollapsible(False)
        self.splitter.setObjectName("splitter")
        self.packagesList = QtWidgets.QTreeWidget(parent=self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(3)
        sizePolicy.setHeightForWidth(self.packagesList.sizePolicy().hasHeightForWidth())
        self.packagesList.setSizePolicy(sizePolicy)
        self.packagesList.setAlternatingRowColors(True)
        self.packagesList.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.ExtendedSelection)
        self.packagesList.setRootIsDecorated(False)
        self.packagesList.setItemsExpandable(False)
        self.packagesList.setObjectName("packagesList")
        self.packagesList.header().setDefaultSectionSize(150)
        self.infoWidget = QtWidgets.QTabWidget(parent=self.splitter)
        self.infoWidget.setObjectName("infoWidget")
        self.packageTab = QtWidgets.QWidget()
        self.packageTab.setObjectName("packageTab")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.packageTab)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.verboseCheckBox = QtWidgets.QCheckBox(parent=self.packageTab)
        self.verboseCheckBox.setObjectName("verboseCheckBox")
        self.horizontalLayout_7.addWidget(self.verboseCheckBox)
        self.installedFilesCheckBox = QtWidgets.QCheckBox(parent=self.packageTab)
        self.installedFilesCheckBox.setObjectName("installedFilesCheckBox")
        self.horizontalLayout_7.addWidget(self.installedFilesCheckBox)
        self.verticalLayout_4.addLayout(self.horizontalLayout_7)
        self.packageInfoWidget = QtWidgets.QTreeWidget(parent=self.packageTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.packageInfoWidget.sizePolicy().hasHeightForWidth())
        self.packageInfoWidget.setSizePolicy(sizePolicy)
        self.packageInfoWidget.setAlternatingRowColors(True)
        self.packageInfoWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectItems)
        self.packageInfoWidget.setRootIsDecorated(False)
        self.packageInfoWidget.setItemsExpandable(False)
        self.packageInfoWidget.setAllColumnsShowFocus(True)
        self.packageInfoWidget.setWordWrap(True)
        self.packageInfoWidget.setColumnCount(2)
        self.packageInfoWidget.setObjectName("packageInfoWidget")
        self.packageInfoWidget.headerItem().setText(0, "1")
        self.packageInfoWidget.headerItem().setText(1, "2")
        self.packageInfoWidget.header().setVisible(False)
        self.packageInfoWidget.header().setStretchLastSection(False)
        self.verticalLayout_4.addWidget(self.packageInfoWidget)
        self.infoWidget.addTab(self.packageTab, "")
        self.vulnerabilitiesTab = QtWidgets.QWidget()
        self.vulnerabilitiesTab.setObjectName("vulnerabilitiesTab")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.vulnerabilitiesTab)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.vulnerabilitiesInfoWidget = QtWidgets.QTreeWidget(parent=self.vulnerabilitiesTab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.vulnerabilitiesInfoWidget.sizePolicy().hasHeightForWidth())
        self.vulnerabilitiesInfoWidget.setSizePolicy(sizePolicy)
        self.vulnerabilitiesInfoWidget.setAlternatingRowColors(True)
        self.vulnerabilitiesInfoWidget.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectItems)
        self.vulnerabilitiesInfoWidget.setRootIsDecorated(False)
        self.vulnerabilitiesInfoWidget.setItemsExpandable(False)
        self.vulnerabilitiesInfoWidget.setAllColumnsShowFocus(True)
        self.vulnerabilitiesInfoWidget.setWordWrap(True)
        self.vulnerabilitiesInfoWidget.setColumnCount(2)
        self.vulnerabilitiesInfoWidget.setObjectName("vulnerabilitiesInfoWidget")
        self.vulnerabilitiesInfoWidget.headerItem().setText(0, "1")
        self.vulnerabilitiesInfoWidget.headerItem().setText(1, "2")
        self.vulnerabilitiesInfoWidget.header().setVisible(False)
        self.vulnerabilitiesInfoWidget.header().setStretchLastSection(False)
        self.verticalLayout_3.addWidget(self.vulnerabilitiesInfoWidget)
        self.infoWidget.addTab(self.vulnerabilitiesTab, "")
        self.verticalLayout_6.addWidget(self.splitter)
        self.verticalLayout_5.addWidget(self.baseWidget)
        self.viewsStackWidget.addWidget(self.packagesPage)
        self.dependenciesPage = QtWidgets.QWidget()
        self.dependenciesPage.setObjectName("dependenciesPage")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.dependenciesPage)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem2)
        self.refreshDependenciesButton = QtWidgets.QToolButton(parent=self.dependenciesPage)
        self.refreshDependenciesButton.setObjectName("refreshDependenciesButton")
        self.horizontalLayout_6.addWidget(self.refreshDependenciesButton)
        self.showDepPackageDetailsButton = QtWidgets.QToolButton(parent=self.dependenciesPage)
        self.showDepPackageDetailsButton.setObjectName("showDepPackageDetailsButton")
        self.horizontalLayout_6.addWidget(self.showDepPackageDetailsButton)
        self.dependencyRepairButton = QtWidgets.QToolButton(parent=self.dependenciesPage)
        self.dependencyRepairButton.setText("")
        self.dependencyRepairButton.setObjectName("dependencyRepairButton")
        self.horizontalLayout_6.addWidget(self.dependencyRepairButton)
        self.dependencyRepairAllButton = QtWidgets.QToolButton(parent=self.dependenciesPage)
        self.dependencyRepairAllButton.setObjectName("dependencyRepairAllButton")
        self.horizontalLayout_6.addWidget(self.dependencyRepairAllButton)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem3)
        self.verticalLayout_7.addLayout(self.horizontalLayout_6)
        self.groupBox = QtWidgets.QGroupBox(parent=self.dependenciesPage)
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.groupBox)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.requiresButton = QtWidgets.QRadioButton(parent=self.groupBox)
        self.requiresButton.setChecked(True)
        self.requiresButton.setObjectName("requiresButton")
        self.horizontalLayout_5.addWidget(self.requiresButton)
        self.requiredByButton = QtWidgets.QRadioButton(parent=self.groupBox)
        self.requiredByButton.setObjectName("requiredByButton")
        self.horizontalLayout_5.addWidget(self.requiredByButton)
        self.verticalLayout_7.addWidget(self.groupBox)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.localDepCheckBox = QtWidgets.QCheckBox(parent=self.dependenciesPage)
        self.localDepCheckBox.setChecked(True)
        self.localDepCheckBox.setObjectName("localDepCheckBox")
        self.horizontalLayout_4.addWidget(self.localDepCheckBox)
        self.userDepCheckBox = QtWidgets.QCheckBox(parent=self.dependenciesPage)
        self.userDepCheckBox.setObjectName("userDepCheckBox")
        self.horizontalLayout_4.addWidget(self.userDepCheckBox)
        self.verticalLayout_7.addLayout(self.horizontalLayout_4)
        self.splitter_2 = QtWidgets.QSplitter(parent=self.dependenciesPage)
        self.splitter_2.setOrientation(QtCore.Qt.Orientation.Vertical)
        self.splitter_2.setObjectName("splitter_2")
        self.dependenciesList = QtWidgets.QTreeWidget(parent=self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(3)
        sizePolicy.setHeightForWidth(self.dependenciesList.sizePolicy().hasHeightForWidth())
        self.dependenciesList.setSizePolicy(sizePolicy)
        self.dependenciesList.setAlternatingRowColors(True)
        self.dependenciesList.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.ExtendedSelection)
        self.dependenciesList.setExpandsOnDoubleClick(False)
        self.dependenciesList.setObjectName("dependenciesList")
        self.dependenciesList.header().setDefaultSectionSize(150)
        self.dependencyInfoWidget = QtWidgets.QTreeWidget(parent=self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.dependencyInfoWidget.sizePolicy().hasHeightForWidth())
        self.dependencyInfoWidget.setSizePolicy(sizePolicy)
        self.dependencyInfoWidget.setAlternatingRowColors(True)
        self.dependencyInfoWidget.setRootIsDecorated(False)
        self.dependencyInfoWidget.setItemsExpandable(False)
        self.dependencyInfoWidget.setAllColumnsShowFocus(True)
        self.dependencyInfoWidget.setWordWrap(True)
        self.dependencyInfoWidget.setColumnCount(2)
        self.dependencyInfoWidget.setObjectName("dependencyInfoWidget")
        self.dependencyInfoWidget.headerItem().setText(0, "1")
        self.dependencyInfoWidget.headerItem().setText(1, "2")
        self.dependencyInfoWidget.header().setVisible(False)
        self.dependencyInfoWidget.header().setStretchLastSection(False)
        self.verticalLayout_7.addWidget(self.splitter_2)
        self.viewsStackWidget.addWidget(self.dependenciesPage)
        self.verticalLayout.addWidget(self.viewsStackWidget)
        self.line_2 = QtWidgets.QFrame(parent=PipPackagesWidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout.addWidget(self.line_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label = QtWidgets.QLabel(parent=PipPackagesWidget)
        self.label.setObjectName("label")
        self.horizontalLayout_3.addWidget(self.label)
        self.searchEdit = QtWidgets.QLineEdit(parent=PipPackagesWidget)
        self.searchEdit.setObjectName("searchEdit")
        self.horizontalLayout_3.addWidget(self.searchEdit)
        self.searchButton = QtWidgets.QToolButton(parent=PipPackagesWidget)
        self.searchButton.setObjectName("searchButton")
        self.horizontalLayout_3.addWidget(self.searchButton)
        self.verticalLayout.addLayout(self.horizontalLayout_3)

        self.retranslateUi(PipPackagesWidget)
        self.viewsStackWidget.setCurrentIndex(0)
        self.infoWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(PipPackagesWidget)
        PipPackagesWidget.setTabOrder(self.viewToggleButton, self.environmentsComboBox)
        PipPackagesWidget.setTabOrder(self.environmentsComboBox, self.pipMenuButton)
        PipPackagesWidget.setTabOrder(self.pipMenuButton, self.refreshButton)
        PipPackagesWidget.setTabOrder(self.refreshButton, self.installButton)
        PipPackagesWidget.setTabOrder(self.installButton, self.upgradeButton)
        PipPackagesWidget.setTabOrder(self.upgradeButton, self.upgradeAllButton)
        PipPackagesWidget.setTabOrder(self.upgradeAllButton, self.uninstallButton)
        PipPackagesWidget.setTabOrder(self.uninstallButton, self.showPackageDetailsButton)
        PipPackagesWidget.setTabOrder(self.showPackageDetailsButton, self.cleanupButton)
        PipPackagesWidget.setTabOrder(self.cleanupButton, self.localCheckBox)
        PipPackagesWidget.setTabOrder(self.localCheckBox, self.notRequiredCheckBox)
        PipPackagesWidget.setTabOrder(self.notRequiredCheckBox, self.userCheckBox)
        PipPackagesWidget.setTabOrder(self.userCheckBox, self.vulnerabilityCheckBox)
        PipPackagesWidget.setTabOrder(self.vulnerabilityCheckBox, self.packagesList)
        PipPackagesWidget.setTabOrder(self.packagesList, self.infoWidget)
        PipPackagesWidget.setTabOrder(self.infoWidget, self.verboseCheckBox)
        PipPackagesWidget.setTabOrder(self.verboseCheckBox, self.installedFilesCheckBox)
        PipPackagesWidget.setTabOrder(self.installedFilesCheckBox, self.packageInfoWidget)
        PipPackagesWidget.setTabOrder(self.packageInfoWidget, self.vulnerabilitiesInfoWidget)
        PipPackagesWidget.setTabOrder(self.vulnerabilitiesInfoWidget, self.refreshDependenciesButton)
        PipPackagesWidget.setTabOrder(self.refreshDependenciesButton, self.showDepPackageDetailsButton)
        PipPackagesWidget.setTabOrder(self.showDepPackageDetailsButton, self.dependencyRepairButton)
        PipPackagesWidget.setTabOrder(self.dependencyRepairButton, self.dependencyRepairAllButton)
        PipPackagesWidget.setTabOrder(self.dependencyRepairAllButton, self.requiresButton)
        PipPackagesWidget.setTabOrder(self.requiresButton, self.requiredByButton)
        PipPackagesWidget.setTabOrder(self.requiredByButton, self.localDepCheckBox)
        PipPackagesWidget.setTabOrder(self.localDepCheckBox, self.userDepCheckBox)
        PipPackagesWidget.setTabOrder(self.userDepCheckBox, self.dependenciesList)
        PipPackagesWidget.setTabOrder(self.dependenciesList, self.dependencyInfoWidget)
        PipPackagesWidget.setTabOrder(self.dependencyInfoWidget, self.searchEdit)
        PipPackagesWidget.setTabOrder(self.searchEdit, self.searchButton)

    def retranslateUi(self, PipPackagesWidget):
        _translate = QtCore.QCoreApplication.translate
        self.viewToggleButton.setToolTip(_translate("PipPackagesWidget", "Toggle to show or hide the dependency tree view"))
        self.refreshButton.setToolTip(_translate("PipPackagesWidget", "Press to refresh the lists"))
        self.installButton.setToolTip(_translate("PipPackagesWidget", "Press to install a package."))
        self.upgradeButton.setToolTip(_translate("PipPackagesWidget", "Press to upgrade the selected packages"))
        self.upgradeAllButton.setToolTip(_translate("PipPackagesWidget", "Press to upgrade all listed packages"))
        self.uninstallButton.setToolTip(_translate("PipPackagesWidget", "Press to uninstall the selected package"))
        self.showPackageDetailsButton.setToolTip(_translate("PipPackagesWidget", "Press to show details for the selected entry"))
        self.cleanupButton.setToolTip(_translate("PipPackagesWidget", "Press to remove leftovers of an upgrade or uninstall run."))
        self.localCheckBox.setToolTip(_translate("PipPackagesWidget", "Select to show only locally-installed packages"))
        self.localCheckBox.setText(_translate("PipPackagesWidget", "Local packages only"))
        self.notRequiredCheckBox.setToolTip(_translate("PipPackagesWidget", "Select to list packages that are not dependencies of installed packages"))
        self.notRequiredCheckBox.setText(_translate("PipPackagesWidget", "Not required Packages"))
        self.userCheckBox.setToolTip(_translate("PipPackagesWidget", "Select to show only packages installed to the user-site"))
        self.userCheckBox.setText(_translate("PipPackagesWidget", "User-Site only"))
        self.vulnerabilityCheckBox.setToolTip(_translate("PipPackagesWidget", "Perform vulnerability checks based on \"Safety DB\"."))
        self.vulnerabilityCheckBox.setText(_translate("PipPackagesWidget", "Vulnerability Check"))
        self.packagesList.setSortingEnabled(True)
        self.packagesList.headerItem().setText(0, _translate("PipPackagesWidget", "Package"))
        self.packagesList.headerItem().setText(1, _translate("PipPackagesWidget", "Installed"))
        self.packagesList.headerItem().setText(2, _translate("PipPackagesWidget", "Available"))
        self.packagesList.headerItem().setText(3, _translate("PipPackagesWidget", "Affected"))
        self.verboseCheckBox.setToolTip(_translate("PipPackagesWidget", "Select to show verbose package information"))
        self.verboseCheckBox.setText(_translate("PipPackagesWidget", "Verbose Information"))
        self.installedFilesCheckBox.setToolTip(_translate("PipPackagesWidget", "Select to show information about installed files"))
        self.installedFilesCheckBox.setText(_translate("PipPackagesWidget", "Installed Files"))
        self.infoWidget.setTabText(self.infoWidget.indexOf(self.packageTab), _translate("PipPackagesWidget", "Package"))
        self.infoWidget.setTabText(self.infoWidget.indexOf(self.vulnerabilitiesTab), _translate("PipPackagesWidget", "Vulnerabilities"))
        self.refreshDependenciesButton.setToolTip(_translate("PipPackagesWidget", "Press to refresh the dependency tree"))
        self.showDepPackageDetailsButton.setToolTip(_translate("PipPackagesWidget", "Press to show details for the selected entry"))
        self.dependencyRepairButton.setToolTip(_translate("PipPackagesWidget", "Press to repair the selected dependency"))
        self.dependencyRepairAllButton.setToolTip(_translate("PipPackagesWidget", "Press to repair all dependencies"))
        self.groupBox.setTitle(_translate("PipPackagesWidget", "View Type"))
        self.requiresButton.setToolTip(_translate("PipPackagesWidget", "Select to show which package requires other packages"))
        self.requiresButton.setText(_translate("PipPackagesWidget", "Requires"))
        self.requiredByButton.setToolTip(_translate("PipPackagesWidget", "Select to show which package is required by others"))
        self.requiredByButton.setText(_translate("PipPackagesWidget", "Required By"))
        self.localDepCheckBox.setToolTip(_translate("PipPackagesWidget", "Select to show only dependencies of locally installed packages"))
        self.localDepCheckBox.setText(_translate("PipPackagesWidget", "Local packages only"))
        self.userDepCheckBox.setToolTip(_translate("PipPackagesWidget", "Select to show only dependencies of packages installed to the user-site"))
        self.userDepCheckBox.setText(_translate("PipPackagesWidget", "User-Site only"))
        self.dependenciesList.setSortingEnabled(True)
        self.dependenciesList.headerItem().setText(0, _translate("PipPackagesWidget", "Package"))
        self.dependenciesList.headerItem().setText(1, _translate("PipPackagesWidget", "Installed"))
        self.dependenciesList.headerItem().setText(2, _translate("PipPackagesWidget", "Required"))
        self.label.setText(_translate("PipPackagesWidget", "Search Package:"))
        self.searchEdit.setToolTip(_translate("PipPackagesWidget", "Enter package name to search for."))
        self.searchButton.setToolTip(_translate("PipPackagesWidget", "Press to open a web browser for searching."))
from eric7.EricWidgets.EricSqueezeLabels import EricSqueezeLabelPath
from eric7.EricWidgets.EricToolButton import EricToolButton
